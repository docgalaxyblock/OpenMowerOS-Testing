#!/usr/bin/env bash
# CustomPiOS module : comitup
# <Description what this module does>
# Written by DocGalaxyBlock (https://github.com/docgalaxyblock/)
# GPL V3
########

# Source error handling, leave this in place
set -ex

# Source CustomPIOS common.sh
source /common.sh
install_cleanup_trap

# ToDo Ubuntu check https://github.com/davesteele/comitup/issues/209#issuecomment-1209916831
#
# disabling systemd-resolveds caching DNS stub resolver on ubuntu
# https://github.com/pi-hole/docker-pi-hole/#installing-on-ubuntu
##
#if [ "${BASE_DISTRO}" == "ubuntu" ] ; then
#    sed -r -i.orig 's/#?DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf
#    sh -c 'rm /etc/resolv.conf && ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf'
#fi

echo_green "Installing comitup..."
wget https://davesteele.github.io/comitup/latest/davesteele-comitup-apt-source_latest.deb
dpkg -i --force-all davesteele-comitup-apt-source_latest.deb
rm davesteele-comitup-apt-source_latest.deb
apt-get update --allow-releaseinfo-change
apt-get install --yes comitup --no-install-recommends

# enable required services and mask conflicting services
systemctl enable NetworkManager.service
systemctl_if_exists mask dhcpd.service
systemctl_if_exists mask dhcpcd.service
systemctl_if_exists mask wpa-supplicant.service
systemctl_if_exists mask raspberrypi-net-mods.service

# copy the stock config to an example
cp /etc/comitup.conf /etc/comitup.conf.example

# this service checks if a comitup.conf exist on the boot partition of the sd card
# if so it copys it to /etc/comitup.conf and renames the one in boot to comitup.conf.settings-applied
if [ "$COMITUP_COPY_SERVICE" == "yes" ]; then
    echo_green "Installing comitup user config copy service..."
    unpack /filesystem/etc /etc
    systemctl enable comitup_config_copy.service
fi



#cleanup
apt-get clean
apt-get autoremove --yes
